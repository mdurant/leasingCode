/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/scripts.js":
/*!*********************************!*\
  !*** ./resources/js/scripts.js ***!
  \*********************************/
/***/ (() => {

eval("/*!\n    * Start Bootstrap - SB Admin Pro v2.0.1 (https://shop.startbootstrap.com/product/sb-admin-pro)\n    * Copyright 2013-2021 Start Bootstrap\n    * Licensed under SEE_LICENSE (https://github.com/StartBootstrap/sb-admin-pro/blob/master/LICENSE)\n    */\nwindow.addEventListener('DOMContentLoaded', function (event) {\n  // Activate feather\n  feather.replace(); // Enable tooltips globally\n\n  var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\n  var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\n    return new bootstrap.Tooltip(tooltipTriggerEl);\n  }); // Enable popovers globally\n\n  var popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"popover\"]'));\n  var popoverList = popoverTriggerList.map(function (popoverTriggerEl) {\n    return new bootstrap.Popover(popoverTriggerEl);\n  }); // Activate Bootstrap scrollspy for the sticky nav component\n\n  var stickyNav = document.body.querySelector('#stickyNav');\n\n  if (stickyNav) {\n    new bootstrap.ScrollSpy(document.body, {\n      target: '#stickyNav',\n      offset: 82\n    });\n  } // Toggle the side navigation\n\n\n  var sidebarToggle = document.body.querySelector('#sidebarToggle');\n\n  if (sidebarToggle) {\n    // Uncomment Below to persist sidebar toggle between refreshes\n    // if (localStorage.getItem('sb|sidebar-toggle') === 'true') {\n    //     document.body.classList.toggle('sidenav-toggled');\n    // }\n    sidebarToggle.addEventListener('click', function (event) {\n      event.preventDefault();\n      document.body.classList.toggle('sidenav-toggled');\n      localStorage.setItem('sb|sidebar-toggle', document.body.classList.contains('sidenav-toggled'));\n    });\n  } // Close side navigation when width < LG\n\n\n  var sidenavContent = document.body.querySelector('#layoutSidenav_content');\n\n  if (sidenavContent) {\n    sidenavContent.addEventListener('click', function (event) {\n      var BOOTSTRAP_LG_WIDTH = 992;\n\n      if (window.innerWidth >= 992) {\n        return;\n      }\n\n      if (document.body.classList.contains(\"sidenav-toggled\")) {\n        document.body.classList.toggle(\"sidenav-toggled\");\n      }\n    });\n  } // Add active state to sidbar nav links\n\n\n  var activatedPath = window.location.pathname.match(/([\\w-]+\\.html)/, '$1');\n\n  if (activatedPath) {\n    activatedPath = activatedPath[0];\n  } else {\n    activatedPath = 'index.html';\n  }\n\n  var targetAnchors = document.body.querySelectorAll('[href=\"' + activatedPath + '\"].nav-link');\n  targetAnchors.forEach(function (targetAnchor) {\n    var parentNode = targetAnchor.parentNode;\n\n    while (parentNode !== null && parentNode !== document.documentElement) {\n      if (parentNode.classList.contains('collapse')) {\n        parentNode.classList.add('show');\n        var parentNavLink = document.body.querySelector('[data-bs-target=\"#' + parentNode.id + '\"]');\n        parentNavLink.classList.remove('collapsed');\n        parentNavLink.classList.add('active');\n      }\n\n      parentNode = parentNode.parentNode;\n    }\n\n    targetAnchor.classList.add('active');\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/scripts.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/scripts.js"]();
/******/ 	
/******/ })()
;